var k=Object.defineProperty;var D=(t,e,s)=>e in t?k(t,e,{enumerable:!0,configurable:!0,writable:!0,value:s}):t[e]=s;var c=(t,e,s)=>(D(t,typeof e!="symbol"?e+"":e,s),s),M=(t,e,s)=>{if(!e.has(t))throw TypeError("Cannot "+s)};var u=(t,e,s)=>(M(t,e,"read from private field"),s?s.call(t):e.get(t)),g=(t,e,s)=>{if(e.has(t))throw TypeError("Cannot add the same private member more than once");e instanceof WeakSet?e.add(t):e.set(t,s)};import{a as m,i as x,d as O}from"./vendor-19302023.js";(function(){const e=document.createElement("link").relList;if(e&&e.supports&&e.supports("modulepreload"))return;for(const i of document.querySelectorAll('link[rel="modulepreload"]'))r(i);new MutationObserver(i=>{for(const n of i)if(n.type==="childList")for(const p of n.addedNodes)p.tagName==="LINK"&&p.rel==="modulepreload"&&r(p)}).observe(document,{childList:!0,subtree:!0});function s(i){const n={};return i.integrity&&(n.integrity=i.integrity),i.referrerpolicy&&(n.referrerPolicy=i.referrerpolicy),i.crossorigin==="use-credentials"?n.credentials="include":i.crossorigin==="anonymous"?n.credentials="omit":n.credentials="same-origin",n}function r(i){if(i.ep)return;i.ep=!0;const n=s(i);fetch(i.href,n)}})();function Q(){const t=document.querySelector(".burger"),e=document.querySelector(".nav-bar-mobile");t.addEventListener("click",function(){t.classList.toggle("change"),e.classList.toggle("is-hidden")})}Q();class l{}c(l,"CLICK","click"),c(l,"SUBMIT","submit"),c(l,"DEFAULT_PAGE_NUMBER",1);var f,y,b,v,E;class A{constructor(){g(this,f,"exercises");g(this,y,"filters");g(this,b,"quote");g(this,v,"subscription");g(this,E,"rating");m.defaults.baseURL="https://your-energy.b.goit.study/api/"}async fetchFiltersOfExercises(e="Muscles",s=1,r=12){const i=new URLSearchParams({filter:e,page:s,limit:r});return await m.get(`${u(this,y)}?${i}`)}async fetchQuote(){return await m.get(`${u(this,b)}`)}async fetchExercisesByFilters(e="",s="",r="",i=1,n=10){const p=new URLSearchParams({[r]:s,keyword:e,page:i,limit:n});return await m.get(`${u(this,f)}?${p}`)}async fetchExerciseByID(e){return await m.get(`${u(this,f)}/${e}`)}async postSubscription(e){const s={email:e};return await m.post(`${u(this,v)}`,s)}async patchExerciseRating(e,s,r,i){const n={rate:s,email:r,review:i};await m.patch(`${u(this,f)}/${e}/${u(this,E)}`,n)}}f=new WeakMap,y=new WeakMap,b=new WeakMap,v=new WeakMap,E=new WeakMap;const F={timeout:3e3,close:!1,closeOnClick:!0,icon:null,position:"topRight"};class d{static success(e){x.success({title:"OK",titleColor:"green",message:e,messageColor:"green",progressBarColor:"green",...F})}static error(e){x.error({title:"Error",titleColor:"red",message:e,messageColor:"red",progressBarColor:"red",...F})}static warning(e){x.warning({title:"Caution",message:e,titleColor:"red",messageColor:"red",progressBarColor:"red",...F})}}class N{constructor(){c(this,"patchExerciseRating");this.apiClient=new A,this.page=l.DEFAULT_PAGE_NUMBER}async getFiltersOfExercises(e){try{const{data:s}=await this.apiClient.fetchFiltersOfExercises(e,this.page);return s}catch(s){d.error(s.message)}}async getQuote(){try{const{data:e}=await this.apiClient.fetchQuote();return e}catch(e){d.error(e.message)}}async getExercisesByFilters(e,s,r){try{const{data:i}=await this.apiClient.fetchExercisesByFilters(e,s,r,this.page);return i}catch(i){d.error(i.message)}}async getExercisesByID(e){const s=e.toString();try{const{data:r}=await this.apiClient.fetchExerciseByID(s);return r}catch(r){d.error(r.message)}}async subscribe(e){try{const{data:s}=await this.apiClient.postSubscription(e);d.success(s.message)}catch(s){d.error(s.message)}}async sendRating(e,s,r,i){try{return await this.apiClient.patchExerciseRating(e,s,r,i)}catch(n){d.error(n.message)}}incrementPage(){this.page+=1}decrementPage(){this.page-=1}resetPage(){this.page=l.DEFAULT_PAGE_NUMBER}set setCurrentPage(e){this.page=Number(e)}}const h=new N;class q{static validateEmail(e){return/^\w+@[a-zA-Z_]+?\.[a-zA-Z]{2,3}$/.test(e)}static firstToUpper(e){return e[0].toUpperCase()+e.substring(1)}}class K{constructor(e){this.container=e}render(e){const s=e.map(r=>{const i=r.imgURL?`<img class="filter__list__muscles-img" src="${r.imgURL}" alt="${r.name}" />`:"";return`<li class="filter__list__muscles" data-name="${r.name}">
                      <div class="filter__list__descr-wrapper">
                          <p class="filter__list__muscles-name">${q.firstToUpper(r.name)}</p>
                          <span class="filter__list__filter-tag">${r.filter}</span>
                      </div>
                      ${i}
                </li>`}).join("");this.container.innerHTML=s}}const a={musclesFilter:document.querySelector('[data-filterRequset="Muscles"]'),bodyPartsFilter:document.querySelector('[data-filterRequset="Body parts"]'),equipmentFilter:document.querySelector('[data-filterRequset="Equipment"]'),inputHolder:document.querySelector(".filter__searchBox"),inputField:document.querySelector(".filter__searchBox__input"),filterList:document.querySelector(".filter__list"),specialSign:document.querySelector(".filter__query__specialSign"),specialText:document.querySelector(".filter__query"),noData:document.querySelector(".error-block")};class H{constructor(e){this.container=e}render(e,s=!1){const r=e.map(i=>{const{bodyPart:n,burnedCalories:p,name:B,target:R,_id:C,rating:$,gifUrl:U}=i;return`
      <li class="body_parts__item">
        <div class="headline_flexbox">
          <div class="grade_flexbox">
            <span class="body_parts__item-type">WORKOUT</span>
            <div class="body_parts__item-gradebox">
              ${s?`<button class="bin" data-id="${C}">
              <svg class="next-btn-svg" width="16px" height="16px">
                <use href="./img/sprite.svg#icon-bin"></use>
              </svg>
            </button>`:`<span class="body_parts__item-grade">${$}</span>
              <svg class="body_parts__item-grade-svg" width="18px" height="18px">
                <use href="./img/sprite.svg#icon-star-icon"></use>
              </svg>`}
            </div>
          </div>
          <div class="body_parts-start-flexbox">
            <button class="next-btn" data-id="${C}">Start
              <svg class="next-btn-svg" width="16px" height="16px">
                <use href="./img/sprite.svg#icon-arrow-right"></use>
              </svg>
            </button>
          </div>
        </div>
        <div class='body_parts__excercise-flexbox'>
          <svg class='body_parts__excercise-svg' width='24px' height='24px'>
            <use href='${U}'></use>
          </svg>
          <h3 class='body_parts__excercise-name'>${B}</h3>
        </div>
        <ul class='body_parts__info'>
          <li class='body_parts__info-item'>
            <span class='body_parts__info-item-key'>Burned calories:</span>
            <span class='body_parts__info-item-value'>${p}/...</span>
          </li>
          <li class='body_parts__info-item'>
            <span class='body_parts__info-item-key'>Body part:</span>
            <span class='body_parts__info-item-value'>${n}</span>
          </li>
          <li class='body_parts__info-item'>
            <span class='body_parts__info-item-key'>Target:</span>
            <span class='body_parts__info-item-value'>${R}</span>
          </li>
        </ul>
      </li>`}).join("");this.container.innerHTML=r}}class _{constructor(){c(this,"debounceDelay",300);c(this,"activeFilter","muscles");c(this,"filterQuery","");c(this,"query","");c(this,"currentPage",1);c(this,"totalPages",0);if(_.instance)return _.instance;_.instance=this}}const o=new _,z=new K(a.filterList),T=new H(a.filterList);function S(t){G(t),j(t),h.getFiltersOfExercises(t).then(e=>{z.render(e.results)})}function G(t){switch(t){case"Muscles":a.musclesFilter.classList.add("filter__btn__active"),a.bodyPartsFilter.classList.remove("filter__btn__active"),a.equipmentFilter.classList.remove("filter__btn__active");break;case"Body parts":a.musclesFilter.classList.remove("filter__btn__active"),a.bodyPartsFilter.classList.add("filter__btn__active"),a.equipmentFilter.classList.remove("filter__btn__active");break;case"Equipment":a.musclesFilter.classList.remove("filter__btn__active"),a.bodyPartsFilter.classList.remove("filter__btn__active"),a.equipmentFilter.classList.add("filter__btn__active");break}}function j(t){switch(t){case"Muscles":a.musclesFilter.disabled=!0,a.bodyPartsFilter.disabled=!1,a.equipmentFilter.disabled=!1;break;case"Body parts":a.musclesFilter.disabled=!1,a.bodyPartsFilter.disabled=!0,a.equipmentFilter.disabled=!1;break;case"Equipment":a.musclesFilter.disabled=!1,a.bodyPartsFilter.disabled=!1,a.equipmentFilter.disabled=!0;break}}function w(){S("Muscles"),o.activeFilter="muscles",L()}function J(){S("Body parts"),o.activeFilter="bodypart",L()}function V(){S("Equipment"),o.activeFilter="equipment",L()}function Z(t){const e=t.target.closest(".filter__list__muscles");e&&(o.filterQuery=e.dataset.name,h.getExercisesByFilters("",o.filterQuery,o.activeFilter).then(({page:s,totalPages:r,results:i})=>{o.currentPage=s,o.totalPages=r,T.render(i)}),L(q.firstToUpper(o.filterQuery)))}function L(t=""){a.noData.classList.add("hidden"),t===""?(a.inputHolder.classList.add("hidden"),a.specialSign.classList.add("hidden")):(a.inputHolder.classList.remove("hidden"),a.specialSign.classList.remove("hidden")),a.specialText.textContent=t}const W=O(t=>{o.query=t.target.value,h.getExercisesByFilters(o.query,o.filterQuery,o.activeFilter).then(({page:e,totalPages:s,results:r})=>{o.currentPage=e,o.totalPages=s,T.render(r),r.length?a.noData.classList.add("hidden"):a.noData.classList.remove("hidden")})},o.debounceDelay);function X(){w(),a.musclesFilter.addEventListener(l.CLICK,w),a.bodyPartsFilter.addEventListener(l.CLICK,J),a.equipmentFilter.addEventListener(l.CLICK,V),a.filterList.addEventListener(l.CLICK,Z),a.inputField.addEventListener("input",W)}X();function Y(){const t=localStorage.getItem("dailyQuote"),e=localStorage.getItem("quoteDate"),s=new Date().toDateString();t&&e===s?I(JSON.parse(t)):ee()}function ee(){h.getQuote().then(t=>{te(t)}).catch(t=>console.error("Error fetching quote:",t))}function te(t){const e=new Date().toDateString();localStorage.setItem("dailyQuote",JSON.stringify(t)),localStorage.setItem("quoteDate",e),I(t)}function I(t){const e=document.querySelector(".quote-text"),s=document.querySelector(".name-text");e.textContent=t.quote,s.textContent=t.author}Y();class se{static init(){document.querySelector(".footer-submit-btn").addEventListener("click",this.submitButtonHandler)}static submitButtonHandler(e){e.preventDefault();let s=document.querySelector(".footer-form-input");const r=q.validateEmail(s.value.trim());if(console.log("emailIsValid:",r),!r){d.error("Email is not valid");return}h.subscribe(s.value.trim()),s.value=""}}se.init();function re(t){t.forEach(e=>{e.isIntersecting?scrollToTopBtn.classList.remove("showBtn"):scrollToTopBtn.classList.add("showBtn")})}function ie(){P.scrollTo({top:0,behavior:"smooth"})}let P;function ae(){const t=document.getElementById("scrollToTopBtn");let e=document.querySelector(".observer-area");new IntersectionObserver(re).observe(e),P=document.documentElement,t.addEventListener("click",ie)}ae();
//# sourceMappingURL=scroll-a6392ed1.js.map
